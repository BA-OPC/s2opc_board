environment:

    matrix:
        - CC_NAME: Visual Studio 15 2017
          CC_SHORTNAME: vs2017
          PYTHON: "C:\\Python36-x64"
image:
    - Visual Studio 2017

install:
    # Prepend chosen Python to the PATH of this build
    - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
    # Check that we have the expected version and architecture for Python
    - "pip --version"
    - "pip install cryptography==2.0.3 pycparser==2.18 six==1.11.0 asn1crypto==0.23.0 cffi==1.11.2 python_dateutil==2.6.1 argparse==1.4.0 pytz==2017.2 idna==2.6 lxml==4.0.0"
    - "pip install freeopcua==0.90.6"

test_script:
    - echo %APPVEYOR_BUILD_FOLDER%
    - cd %APPVEYOR_BUILD_FOLDER%
    - set ROOT_DIR=%APPVEYOR_BUILD_FOLDER%
    - set CHECK_DIR_NAME=check-0.14.0
    - set CHECK_DIR=%ROOT_DIR%\%CHECK_DIR_NAME%
    - set CHECK_BUILD_DIR=%CHECK_DIR%\build
    - set MBEDTLS_DIR_NAME=mbedtls-2.16.0
    - set MBEDTLS_DIR=%ROOT_DIR%\%MBEDTLS_DIR_NAME%
    - set MBEDTLS_BUILD_DIR=%MBEDTLS_DIR%\build
    - set EXPAT_DIR_NAME=expat-2.2.9
    - set EXPAT_DIR=%ROOT_DIR%\libexpat-R_2_2_9\expat
    - set EXPAT_BUILD_DIR=%EXPAT_DIR%\build
    - set EXPAT_INSTALL_DIR=%EXPAT_DIR%\install
    - set S2OPC_CLIENTSERVER_ONLY=1
    - set CONFIG=RelWithDebInfo
    - set LIBS_DIRS=%CHECK_BUILD_DIR%;%EXPAT_INSTALL_DIR%

    # download and build libcheck
    - cd %ROOT_DIR%
    - "appveyor.exe DownloadFile https://github.com/libcheck/check/archive/0.14.0.zip -FileName %CHECK_DIR_NAME%.zip"
    - "unzip %CHECK_DIR_NAME%.zip"
    - cmd: |-
        cd %CHECK_DIR%
        mkdir build
        cd build
        cmake .. -G "Visual Studio 15 2017 Win64"
        cmake --build . --target ALL_BUILD --config %CONFIG%
    # download and build mbedtls
    - cd %ROOT_DIR%
    - "appveyor.exe DownloadFile https://tls.mbed.org/download/%MBEDTLS_DIR_NAME%-apache.tgz -FileName %MBEDTLS_DIR_NAME%-apache.tgz"
    - tar xvf "%MBEDTLS_DIR_NAME%-apache.tgz"
    - |-
        cd %MBEDTLS_DIR%
        mkdir build
        cd build
        cmake .. -G "Visual Studio 15 2017 Win64"
        cmake --build . --target ALL_BUILD --config %CONFIG%
    # download and build expat
    - cd %ROOT_DIR%
    - "appveyor.exe DownloadFile https://github.com/libexpat/libexpat/archive/R_2_2_9.zip -FileName %EXPAT_DIR_NAME%.zip"
    - "unzip %EXPAT_DIR_NAME%.zip"
    - |-
        cd %EXPAT_DIR%
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=%EXPAT_INSTALL_DIR% .. -G "Visual Studio 15 2017 Win64"
        cmake --build . --target install --config %CONFIG%

    # configure, build and test S2OPC project
    - |-
        cd %ROOT_DIR%
        mkdir build
        cd build
        mkdir lib
        copy %MBEDTLS_DIR%\build\library\%CONFIG%\mbedtls.lib lib
        copy %MBEDTLS_DIR%\build\library\%CONFIG%\mbedx509.lib lib
        copy %MBEDTLS_DIR%\build\library\%CONFIG%\mbedcrypto.lib lib
        copy %EXPAT_INSTALL_DIR%\lib\libexpat.lib lib
        cmake -DS2OPC_CLIENTSERVER_ONLY=%S2OPC_CLIENTSERVER_ONLY% -DMBEDTLS_INCLUDE_DIR=%MBEDTLS_BUILD_DIR%/../include -DMBEDTLS_LIBRARY=%MBEDTLS_BUILD_DIR%/library/%CONFIG%/mbedtls.lib -DMBEDX509_LIBRARY=%MBEDTLS_BUILD_DIR%/library/%CONFIG%/mbedx509.lib -DMBEDCRYPTO_LIBRARY=%MBEDTLS_BUILD_DIR%/library/%CONFIG%/mbedcrypto.lib -DCMAKE_PREFIX_PATH=%LIBS_DIRS% .. -G "Visual Studio 15 2017 Win64"
        cmake --build . --config %CONFIG%
    - cd %ROOT_DIR%\build\tests\ClientServer
    - "ctest -T test -C %CONFIG% --no-compress-output --test-output-size-passed 65536 --test-output-size-failed 65536 -V"

build: off

artifacts:
  - path: build\bin
    name: Binaries
    type: zip

on_failure:
 - ps: $root = Resolve-Path .\Testing\; [IO.Directory]::GetFiles($root.Path, '*.*', 'AllDirectories') | % { Push-AppveyorArtifact $_ -FileName $_.Substring($root.Path.Length + 1) -DeploymentName to-publish }
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
